Sure, here's a breakdown of Python's features, followed by examples that showcase those features:

1. **Procedural Programming Language**: Python supports procedural programming through functions and procedures. You can organize your code into functions and call them sequentially.

   ```python
   def greet(name):
       print("Hello, " + name)

   greet("Alice")
   ```

2. **Functional Programming**: Python supports functional programming principles, allowing you to use functions as first-class citizens and work with features like lambda functions and map.

   ```python
   numbers = [1, 2, 3, 4, 5]
   squared = list(map(lambda x: x**2, numbers))
   ```

3. **Object-Oriented Programming (OOP)**: Python is an OOP language, enabling you to create classes and objects for better code organization.

   ```python
   class Dog:
       def __init__(self, name):
           self.name = name

       def bark(self):
           print(f"{self.name} says woof!")

   my_dog = Dog("Buddy")
   my_dog.bark()
   ```

4. **Dynamic Typed**: Python is dynamically typed, meaning you don't need to specify variable types explicitly.

   ```python
   age = 25
   age = "Twenty-five"
   ```

5. **Scripting Language**: Python is often used for scripting, making it great for automating tasks.

   ```python
   # A simple script to download a web page using the 'requests' library
   import requests

   url = "https://www.example.com"
   response = requests.get(url)
   ```

6. **Case Sensitive**: Python is case-sensitive, so variable names with different capitalization are treated as distinct.

   ```python
   variable = 42
   Variable = "Hello"
   ```

7. **Interpreted Programming Language**: Python is interpreted, which means you can run code without compilation.

   ```python
   # Running a Python script in the terminal
   python my_script.py
   ```

8. **Cross-Platform**: Python is cross-platform, making it compatible with various operating systems.

   ```python
   # Python code runs on Windows, macOS, and Linux
   ```

These examples demonstrate Python's versatility and common use cases for interviews and real-world scenarios.